<?xml version="1.0"?>
<project name="diameter.release.sf" default="package" basedir=".">

	<!-- Diameter Components Versions -->
	<property name="RELEASE_VERSION" value="1.3.3.FINAL" />

	<property name="CORE_JDIAMETER_VERSION" value="1.5.4.1-build415" />
	<property name="CORE_JDIAMETER-HA_VERSION" value="1.0.0.BETA2" />
	<property name="CORE_MUX_VERSION" value="1.3.3.FINAL" />
	<property name="CORE_DOCS_VERSION" value="1.3.1.FINAL" />

	<property name="TOOLS_JOPR_PLUGIN_VERSION" value="1.0.0.BETA2" />

	<property name="RA_base_VERSION" value="2.2.2.FINAL" />
	<property name="RA_cca_VERSION" value="2.2.2.FINAL" />
	<property name="RA_sh-client_VERSION" value="2.2.1.FINAL" />
	<property name="RA_sh-server_VERSION" value="2.2.1.FINAL" />
	<property name="RA_ro_VERSION" value="2.2.2.FINAL" />
	<property name="RA_rf_VERSION" value="2.2.2.FINAL" />
	<property name="RA_cx-dx_VERSION" value="2.2.1.FINAL" />
	<property name="RA_gx_VERSION" value="1.0.0.BETA1" />

	<property name="EXAMPLE_JAINSLEE_base_VERSION" value="2.1.2.FINAL" />
	<property name="EXAMPLE_JAINSLEE_openims_VERSION" value="2.1.2.FINAL" />

	<!-- Dependencies Components Versions -->
	<property name="JAINSLEE_VERSION" value="2.2.1.FINAL" />
	<property name="JAINSLEE_SIP11_RA_VERSION" value="2.2.0.FINAL" />
	<property name="JAINSLEE_SIP_SERVICES_VERSION" value="2.2.0.FINAL" />
	<property name="JBOSS_VERSION" value="5.1.0.GA" />

	
	<!-- jboss-x. to be used as building profile -->
	<property name="DEFAULT_SAR_CONFIGURATION" value="5" />
	<property name="ALTERNATIVE_SAR_CONFIGURATION" value="4" />
	
	<property name="JAINSLEE_RA_LIST" value="base,cca,sh-client,sh-server,ro,rf,cx-dx,gx" />
	<property name="JAINSLEE_EXAMPLE_LIST" value="base,openims" />

	<!-- Directories Configuration -->
	<property name="downloads_dir" value="${basedir}/downloads" />
	<property name="checkout_base_dir" value="${basedir}/diameter" />
	<property name="zip_dir" value="${basedir}/diameter/zip" />

	<property name="mux_zip_dir" value="${basedir}/diameter/mux-zip" />
	<property name="alt_mux_zip_dir" value="${basedir}/diameter/alt-mux-zip" />

	<property name="zip_file_name" value="mobicents-diameter-${RELEASE_VERSION}" />

	<property name="mux_zip_file_name" value="mobicents-diameter-mux-jboss${DEFAULT_SAR_CONFIGURATION}-${RELEASE_VERSION}.sar.zip" />
	<property name="alt_mux_zip_file_name" value="mobicents-diameter-mux-jboss${ALTERNATIVE_SAR_CONFIGURATION}-${RELEASE_VERSION}.sar.zip" />

	<property name="failoncopy" value="true" />
	
	<!-- Definition -->
	<property environment="sys" />
	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows" />
	</condition>

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${diameter.release.sf}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="init" />

	<target name="checkout" depends="init,checkout-core,checkout-resources,checkout-examples,checkout-jopr-plugin,download-jainslee" />
	<target name="build-src" depends="build-src-core,build-src-resources,build-src-examples,build-jopr-plugin,unzip-jainslee" />
	<target name="prepare-text-content" depends="prepare-text-content-core,prepare-text-content-resources,prepare-text-content-examples" />
	<target name="copy-jars" depends="copy-jars-core,copy-jars-resources,copy-jars-examples,copy-jopr-plugin,copy-jars-additional-resources" />

	<!-- Checkout section -->

	<target name="checkout-core">
		<echo>Checkout Diameter Core (jDiameter v${CORE_JDIAMETER_VERSION}, jDiameter HA v${CORE_JDIAMETER-HA_VERSION}, MUX v${CORE_MUX_VERSION}, Docs v${CORE_DOCS_VERSION})</echo>
		<exec executable="${mvn.executable}" dir="${ant.file.diameter.release}/../">
			<arg line="-f internal-components-checkout-standalone-1.2.X.xml validate -P checkout -Djdiam_version=${CORE_JDIAMETER_VERSION} -Djdiam-ha_version=${CORE_JDIAMETER-HA_VERSION} -Dmux_version=${CORE_MUX_VERSION} -Ddocs_version=${CORE_DOCS_VERSION}" />
		</exec>
	</target>

	<target name="checkout-resources">
		<for delimiter="," param="ra.name" list="${JAINSLEE_RA_LIST}">
			<sequential>
				<echo>Checkout Diameter @{ra.name} Resource Adaptor v${RA_@{ra.name}_VERSION}</echo>
				<exec executable="${mvn.executable}" dir="${ant.file.diameter.release}/../">
					<arg line="-f internal-components-checkout-standalone-1.2.X.xml validate -P checkout-resource -Dresource_name=@{ra.name} -Dresource_version=${RA_@{ra.name}_VERSION}" />
				</exec>
			</sequential>
		</for>
	</target>

	<target name="checkout-examples">
		<for delimiter="," param="example.name" list="${JAINSLEE_EXAMPLE_LIST}">
			<sequential>
				<echo>Checkout Diameter Example @{example.name} v${EXAMPLE_JAINSLEE_@{example.name}_VERSION}</echo>
				<exec executable="${mvn.executable}" dir="${ant.file.diameter.release}/../">
					<arg line="-f internal-components-checkout-standalone-1.2.X.xml validate -P checkout-example -Dexample_name=@{example.name} -Dexample_version=${EXAMPLE_JAINSLEE_@{example.name}_VERSION}" />
				</exec>
			</sequential>
		</for>
	</target>
	<target name="checkout-jopr-plugin">
		<echo>Checkout Diameter Jopr Plugin</echo>
		<exec executable="${mvn.executable}" dir="${ant.file.diameter.release}/../">
			<arg line="-f internal-components-checkout-standalone-1.2.X.xml validate -P checkout-jopr-plugin -Djopr_plugin_version=${TOOLS_JOPR_PLUGIN_VERSION}" />
		</exec>
	</target>

	<!-- Compile Section -->

	<target name="build-src-core">
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/core/jdiameter">
			<arg line="-f pom.xml clean install" />
		</exec>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/core/jdiameter-ha">
			<arg line="-f pom.xml clean install" />
		</exec>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/core/mux">
			<arg line="-f pom.xml clean install -Pjboss${DEFAULT_SAR_CONFIGURATION}" />
		</exec>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/core/docs">
			<arg line="-f pom.xml clean install -Pmobicents" />
		</exec>
	</target>

	<target name="build-src-resources">
		<for delimiter="," param="ra.name" list="${JAINSLEE_RA_LIST}">
			<sequential>
				<echo>Build Diameter @{ra.name} Resource Adaptor</echo>
				<exec executable="${mvn.executable}" dir="${checkout_base_dir}/resources/@{ra.name}">
					<arg line="-f pom.xml install" />
				</exec>
				<echo>Build Diameter @{ra.name} Resource Adaptor Documentation</echo>
				<exec executable="${mvn.executable}" dir="${checkout_base_dir}/resources/@{ra.name}/docs">
					<arg line="-f pom.xml install -Pmobicents" />
				</exec>
			</sequential>
		</for>
	</target>

	<target name="build-src-examples">
		<for delimiter="," param="example.name" list="${JAINSLEE_EXAMPLE_LIST}">
			<sequential>
				<echo>Build Diameter @{example.name} Example</echo>
				<exec executable="${mvn.executable}" dir="${checkout_base_dir}/examples/@{example.name}">
					<arg line="-f pom.xml install" />
				</exec>
			</sequential>
		</for>
	</target>

	<target name="build-jopr-plugin">
		<echo>Build Diameter Jopr Plugin</echo>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/diameter-jopr-plugin">
			<arg line="clean install" />
		</exec>
		<echo>Build Diameter Jopr Plugin Documentation</echo>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/diameter-jopr-plugin/docs">
			<arg line="clean install -Pmobicents" />
		</exec>
	</target>

	<!-- Copy jars section -->

	<target name="copy-jars-core">
		<copy todir="${zip_dir}/core/jdiameter">
			<fileset dir="${checkout_base_dir}/core/jdiameter/api/target">
				<include name="jdiameter-api-${CORE_JDIAMETER_VERSION}.jar" />
			</fileset>
			<fileset dir="${checkout_base_dir}/core/jdiameter/impl/target">
				<include name="jdiameter-impl-${CORE_JDIAMETER_VERSION}.jar" />
			</fileset>
			<fileset dir="${checkout_base_dir}/core/jdiameter-ha/api/target">
				<include name="jdiameter-ha-api-${CORE_JDIAMETER-HA_VERSION}.jar" />
			</fileset>
			<fileset dir="${checkout_base_dir}/core/jdiameter-ha/impl/target">
				<include name="jdiameter-ha-impl-${CORE_JDIAMETER-HA_VERSION}.jar" />
			</fileset>
		</copy>

		<copy todir="${zip_dir}/core/mux">
			<fileset dir="${checkout_base_dir}/core/mux/jar/target">
				<include name="mobicents-diameter-mux-${CORE_MUX_VERSION}.jar" />
			</fileset>
		</copy>
		<copy todir="${zip_dir}/core">
			<fileset dir="${checkout_base_dir}/core/docs/jdocbook-mobicents/target/docbook/publish/en-US/pdf">
				<include name="Mobicents_Diameter_Core_User_Guide.pdf" />
			</fileset>
		</copy>
		<unzip src="${checkout_base_dir}/core/mux/sar-jboss-${DEFAULT_SAR_CONFIGURATION}/target/mobicents-diameter-mux-${CORE_MUX_VERSION}.sar" dest="${zip_dir}/core/mux/mobicents-diameter-mux-${CORE_MUX_VERSION}.sar/"/>
	</target>

	<target name="copy-jars-resources">
		<for delimiter="," param="ra.name" list="${JAINSLEE_RA_LIST}">
			<sequential>
				<echo>Copy Diameter Resource: @{ra.name}</echo>

				<copy todir="${zip_dir}/resources/@{ra.name}">
					<fileset dir="${checkout_base_dir}/resources/@{ra.name}/du/target">
						<include name="diameter-@{ra.name}-ra-DU-${RA_@{ra.name}_VERSION}.jar" />
					</fileset>
					<fileset dir="${checkout_base_dir}/resources/@{ra.name}/docs/jdocbook-mobicents/target/docbook/publish/en-US/pdf">
						<include name="*.pdf" />
					</fileset>
				</copy>
			</sequential>
		</for>
	</target>

	<target name="copy-jars-examples">
		<for delimiter="," param="example.name" list="${JAINSLEE_EXAMPLE_LIST}">
			<sequential>
				<echo>Copy Diameter Example: @{example.name} Version: ${EXAMPLE_JAINSLEE_@{example.name}_VERSION}</echo>

				<copy todir="${zip_dir}/examples/@{example.name}">
					<fileset dir="${checkout_base_dir}/examples/@{example.name}/du/target">
						<include name="diameter-@{example.name}-example-DU-*.jar" />
					</fileset>
					<!-- TODO: WHEN EXAMPLES HAVE DOCS - fileset dir="${checkout_base_dir}/examples/@{example.name}/docs/jdocbook-mobicents/target/docbook/publish/en-US/pdf">
						<include name="*.pdf" />
					</fileset-->
				</copy>
			</sequential>
		</for>
	</target>

	<target name="copy-jopr-plugin">
		<copy tofile="${zip_dir}/tools/mobicents-diameter-jopr-plugin-${TOOLS_JOPR_PLUGIN_VERSION}.jar">
			<fileset dir="${checkout_base_dir}/diameter-jopr-plugin/target/">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${zip_dir}/tools/">
			<fileset dir="${checkout_base_dir}/diameter-jopr-plugin/docs/jdocbook-mobicents/target/docbook/publish/en-US/pdf">
				<include name="*.pdf" />
			</fileset>
		</copy>
	</target>
	<target name="copy-jars-additional-resources">
	  <copy todir="${zip_dir}/examples/openims/thirdparty/sip11" file="${jainslee.folder.path}/resources/sip11/sip11-ra-DU-${JAINSLEE_SIP11_RA_VERSION}.jar" failonerror="${failoncopy}" />
	  <copy todir="${zip_dir}/examples/openims/thirdparty/sip11" file="${jainslee.folder.path}/resources/sip11/du-management.xml" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="JAINSLEE_VERSION" value="${JAINSLEE_VERSION}" />
				</replacetokens>
			</filterchain>
	  </copy>
	  <copy todir="${zip_dir}/examples/openims/thirdparty/sip11" file="${checkout_base_dir}/examples/openims/release/thirdparty/sip11/build.xml" failonerror="${failoncopy}" />

	  <copy todir="${zip_dir}/examples/openims/thirdparty/sip-services-proxy-with-initial-invite" file="${jainslee.folder.path}/examples/sip-services/sip-services-proxy-with-initial-invite-DU-${JAINSLEE_SIP_SERVICES_VERSION}.jar" failonerror="${failoncopy}" />
	  <copy todir="${zip_dir}/examples/openims/thirdparty/sip-services-proxy-with-initial-invite" file="${jainslee.folder.path}/examples/sip-services/proxy-with-initial-invite-du-management.xml" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="JAINSLEE_VERSION" value="${JAINSLEE_VERSION}" />
				</replacetokens>
			</filterchain>
	  </copy>
	  <copy todir="${zip_dir}/examples/openims/thirdparty/sip-services-proxy-with-initial-invite" file="${checkout_base_dir}/examples/openims/release/thirdparty/sip-services-proxy-with-initial-invite/build.xml" failonerror="${failoncopy}" />
	</target>

	<!-- Prepare text content section -->

	<target name="prepare-text-content-core">
		<copy todir="${zip_dir}" file="${basedir}/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${RELEASE_VERSION}" />
					<token key="JDIAM_VERSION" value="${CORE_JDIAMETER_VERSION}" />
					<token key="JDIAM-HA_VERSION" value="${CORE_JDIAMETER-HA_VERSION}" />
					<token key="MUX_VERSION" value="${CORE_MUX_VERSION}" />
					<token key="base_VERSION" value="${RA_base_VERSION}" />
					<token key="cca_VERSION" value="${RA_cca_VERSION}" />
					<token key="sh-client_VERSION" value="${RA_sh-client_VERSION}" />
					<token key="sh-server_VERSION" value="${RA_sh-server_VERSION}" />
					<token key="ro_VERSION" value="${RA_ro_VERSION}" />
					<token key="rf_VERSION" value="${RA_rf_VERSION}" />
					<token key="base_EXAMPLE_VERSION" value="${EXAMPLE_JAINSLEE_base_VERSION}" />
					<token key="openims_EXAMPLE_VERSION" value="${EXAMPLE_JAINSLEE_openims_VERSION}" />
				</replacetokens>
			</filterchain>
		</copy>
		<copy todir="${zip_dir}/core/jdiameter" file="${checkout_base_dir}/core/jdiameter/release/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="JDIAM_VERSION" value="${CORE_JDIAMETER_VERSION}" />
				</replacetokens>
			</filterchain>
		</copy>
		<!-- TODO: Add jdiameter-ha README.TXT ? -->
		<copy todir="${zip_dir}/core/mux" file="${checkout_base_dir}/core/mux/release/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="MUX_VERSION" value="${CORE_MUX_VERSION}" />
				</replacetokens>
			</filterchain>
		</copy>
	</target>

	<target name="prepare-text-content-resources">
		<for delimiter="," param="ra.name" list="${JAINSLEE_RA_LIST}">
			<sequential>
				<echo>Copy Diameter Resource: @{ra.name}</echo>

				<copy tofile="${zip_dir}/resources/@{ra.name}/du-management.xml" file="${checkout_base_dir}/resources/@{ra.name}/du/target/build.xml" failonerror="${failoncopy}" />
				<copy tofile="${zip_dir}/resources/@{ra.name}/build.xml" file="template-build.xml" failonerror="${failoncopy}" />
				<copy todir="${zip_dir}/resources/@{ra.name}" file="${checkout_base_dir}/resources/@{ra.name}/release/README.TXT" failonerror="${failoncopy}">
					<filterchain>
						<replacetokens>
							<token key="@{ra.name}_VERSION" value="${RA_@{ra.name}_VERSION}" />
						</replacetokens>
					</filterchain>
				</copy>
			</sequential>
		</for>
	</target>

	<target name="prepare-text-content-examples">
		<for delimiter="," param="example.name" list="${JAINSLEE_EXAMPLE_LIST}">
			<sequential>
				<echo>Copy Diameter Example: @{example.name}</echo>

				<copy tofile="${zip_dir}/examples/@{example.name}/du-management.xml" file="${checkout_base_dir}/examples/@{example.name}/du/target/build.xml" failonerror="${failoncopy}" />
				<copy tofile="${zip_dir}/examples/@{example.name}/build.xml" file="template-build.xml" failonerror="${failoncopy}" />
				<copy todir="${zip_dir}/examples/@{example.name}" file="${checkout_base_dir}/examples/@{example.name}/release/README.TXT" failonerror="${failoncopy}">
					<filterchain>
						<replacetokens>
							<token key="@{example.name}_EXAMPLE_VERSION" value="${EXAMPLE_JAINSLEE_@{example.name}_VERSION}" />
						</replacetokens>
					</filterchain>
				</copy>
			</sequential>
		</for>
	</target>

	<!-- JAIN SLEE -->

	<property name="jainslee.distro.zip.path" value="${downloads_dir}/mobicents-jainslee-server-${JAINSLEE_VERSION}.zip" />
	<property name="jainslee.folder.path" value="${checkout_base_dir}/mobicents-jainslee-server-${JAINSLEE_VERSION}" />

	<available file="${jainslee.distro.zip.path}" property="got.jainslee" />
	
	<target name="download-jainslee" unless="got.jainslee">
		<echo>Downloading Mobicents JAIN SLEE Server v${JAINSLEE_VERSION}</echo>
		<mkdir dir="${downloads_dir}"/>
		<get verbose="true" dest="${jainslee.distro.zip.path}" src="http://downloads.sourceforge.net/project/mobicents/Mobicents%20JAIN%20SLEE%20Server/${JAINSLEE_VERSION}/mobicents-jainslee-${JAINSLEE_VERSION}-jboss-${JBOSS_VERSION}.zip" />
	</target>

	<target name="unzip-jainslee">
		<unzip src="${jainslee.distro.zip.path}" dest="${jainslee.folder.path}" />
	</target>

	<!-- Release procedures : Make ZIP(s), Checksum , Clean -->
	
	<target name="build-src-zip" depends="clean, checkout">
		<zip destfile="${basedir}/${zip_file_name}-src.zip">
			<zipfileset dir="${checkout_base_dir}/core" prefix="core" excludes="release"></zipfileset>
			<zipfileset dir="${checkout_base_dir}/resources" prefix="resources" excludes="release"></zipfileset>
			<zipfileset dir="${checkout_base_dir}/examples" prefix="examples" excludes="release"></zipfileset>
		</zip>

		<antcall target="checksum">
			<param name="source.file" value="${basedir}/${zip_file_name}-src.zip" />
			<param name="algorithm" value="sha1" />
		</antcall>
	</target>

	<target name="package" description="Create zip file: ${checkout_base_dir}/${zip_file_name}.zip" depends="build-src-zip, build-src, copy-jars, prepare-text-content">
		<zip destfile="${basedir}/${zip_file_name}.zip" basedir="${zip_dir}"/>
		<antcall target="checksum">
			<param name="source.file" value="${basedir}/${zip_file_name}.zip" />
			<param name="algorithm" value="sha1" />
		</antcall>
		
		<antcall target="build-and-package-mux" />
		<antcall target="build-and-package-mux-alternative" />

		<antcall target="clean" />
	</target>

	<target name="build-and-package-mux" description="Create zip file: ${basedir}/${mux_zip_file_name}">
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/core/mux">
			<arg line="-f pom.xml clean install -Pjboss${DEFAULT_SAR_CONFIGURATION}" />
		</exec>

		<mkdir dir="${mux_zip_dir}" />
		
		<copy todir="${mux_zip_dir}" file="${checkout_base_dir}/core/mux/release/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="MUX_VERSION" value="${CORE_MUX_VERSION}" />
				</replacetokens>
			</filterchain>
		</copy>

		<copy todir="${mux_zip_dir}">
			<fileset dir="${checkout_base_dir}/core/mux/jar/target">
				<include name="mobicents-diameter-mux-${CORE_MUX_VERSION}.jar" />
			</fileset>
		</copy>
		<unzip src="${checkout_base_dir}/core/mux/sar-jboss-${DEFAULT_SAR_CONFIGURATION}/target/mobicents-diameter-mux-${CORE_MUX_VERSION}.sar" dest="${mux_zip_dir}/mobicents-diameter-mux-${CORE_MUX_VERSION}.sar/"/>

		<zip destfile="${basedir}/${mux_zip_file_name}" basedir="${mux_zip_dir}"/>
		<antcall target="checksum">
			<param name="source.file" value="${basedir}/${mux_zip_file_name}" />
			<param name="algorithm" value="sha1" />
		</antcall>
	</target>

	<target name="build-and-package-mux-alternative" description="Create zip file: ${basedir}/${alt_mux_zip_file_name}">
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/core/mux">
			<arg line="-f pom.xml clean install -Pjboss${ALTERNATIVE_SAR_CONFIGURATION}" />
		</exec>

		<mkdir dir="${alt_mux_zip_dir}" />
		
		<copy todir="${alt_mux_zip_dir}" file="${checkout_base_dir}/core/mux/release/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="MUX_VERSION" value="${CORE_MUX_VERSION}" />
				</replacetokens>
			</filterchain>
		</copy>

		<copy todir="${alt_mux_zip_dir}">
			<fileset dir="${checkout_base_dir}/core/mux/jar/target">
				<include name="mobicents-diameter-mux-${CORE_MUX_VERSION}.jar" />
			</fileset>
		</copy>
		<unzip src="${checkout_base_dir}/core/mux/sar-jboss-${ALTERNATIVE_SAR_CONFIGURATION}/target/mobicents-diameter-mux-${CORE_MUX_VERSION}.sar" dest="${alt_mux_zip_dir}/mobicents-diameter-mux-${CORE_MUX_VERSION}.sar/"/>

		<zip destfile="${basedir}/${alt_mux_zip_file_name}" basedir="${alt_mux_zip_dir}"/>
		<antcall target="checksum">
			<param name="source.file" value="${basedir}/${alt_mux_zip_file_name}" />
			<param name="algorithm" value="sha1" />
		</antcall>
	</target>

	<target name="checksum">
	  <checksum file="${source.file}" algorithm="${algorithm}" fileext=".${algorithm}.asc" forceOverwrite="yes"/>
	</target>

	<target name="clean" description="Remove everything that we created.">
		<delete dir="${checkout_base_dir}" verbose="false" />
	</target>

</project>
