<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">
%BOOK_ENTITIES;]>
<section id="mf-Message_Format">
  <title>Message Format</title>
  <para>Diameter is a byte based protocol. Each message has fixed structure. Each message consists of two parts: header and payload</para>
  <para>Messag   header is common for all messages, has fixed length and content. It identifies message( by code, application and certain bit flags) in diameter world.</para>
  <para>Payload is message part which is build of carried AVPs. Its content differs for each command and application(however ALL define Session-Id AVP as mandatory). </para>
  <figure>
    <title>Diameter Message Structure</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/dia-Introduction-dia-DiameterPacketFormat.png" format="PNG"/>
      </imageobject>
    </mediaobject>
  </figure>
  <para>Header has following fields:</para>
  <variablelist>
    <title>Message Headers</title>
    <varlistentry>
      <term>Version</term>
      <listitem>
        <para>Indicates the Diameter protocol version.  This value is always set to <literal>1</literal>.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Message Length</term>
      <listitem>
        <para>Indicates the Diameter message length, including the header fields.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Flags</term>
      <listitem>
        <para>Eight bits, which specify information about mesage.  First four bits in Flags octet have following meaning(in order from MSB): </para>
        <itemizedlist>
          <listitem>
            <para>R = Message is a request(1), answer(0)</para>
          </listitem>
          <listitem>
            <para>P = Message is proxiable(1), notproxiable(0)</para>
          </listitem>
          <listitem>
            <para>E = Message is an error message(1), regular message(0)</para>
          </listitem>
          <listitem>
            <para>T = Message is  retransmitted(1), is original(0)</para>
          </listitem>
        </itemizedlist>
        <para>The last four bits are reserved for future use, and should be set to <literal>0</literal></para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Command Code</term>
      <listitem>
        <para>Indicates the command associated with the message, such as what type of message it is.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Application ID</term>
      <listitem>
        <para>Identifies application to which this message belongs. Application ID is unique..  The application can be an authentication, accounting, or vendor-specific application.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Hop-by-Hop ID</term>
      <listitem>
        <para>Unique ID that is used to match requests and answer.  The Answer message must ensure this header  field contains the same value present in the  corresponding request. This is how answers are routed back to peer which sent message</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>End-to-End ID</term>
      <listitem>
        <para>Time-limited unique ID that is used to to detect duplicate messages.  The ID must be unique for at least four minutes.  The Answer message originator must ensure that this header contains the same value present in the corresponding request.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>Message payload is built up from AVPs. Each AVP has similar structure: header and encoded data. Data can be simple  - integer, long or complex - another encoded AVP.</para>
  <figure>
    <title>Payload Structure</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/dia-Introduction-dia-DiameterAVPLayout.png" format="PNG"/>
      </imageobject>
    </mediaobject>
  </figure>
  <variablelist>
    <title>Payload AVPs</title>
    <varlistentry>
      <term>AVP Code</term>
      <listitem>
        <para>Uniquely identifies the attribute, by combining the specified code with the value contained within the Vendor-ID header field.  </para>
        <para>AVP numbers 1 to 255 are reserved for RADIUS backwards compatibility, and do not require the Vendor-ID header field.  AVP numbers 256 and above are used exclusively for the Diameter protocol, and are allocated by <orgname>IANA</orgname>.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term> Flags</term>
      <listitem>
        <para>Bit flags, which specify how each attribute must be handled. Flags octet has following structure: V M P r r r r r. </para>
        <para> Full description can be found in<ulink url="http://tools.ietf.org/html/rfc3588#section-4.1">rfc 3588 section 4.1</ulink> .  </para>
        <para>First three bits have following meaning(from MSB): </para>
        <itemizedlist>
          <listitem>
            <para>V = If set, indicates that optional octets(Vendor-ID) is present in AVP header.</para>
          </listitem>
          <listitem>
            <para>M = If set, it indicates that receiveing peer must understand this AVP or send error answer.</para>
          </listitem>
          <listitem>
            <para>P = If set, it indicates Data must be encrypted.</para>
          </listitem>
        </itemizedlist>
        <para>The last 5 bits are reserved for future use, and should be set to <literal>0</literal></para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>AVP Length</term>
      <listitem>
        <para>Indicates the number of octets in the AVP, including the following information:</para>
        <itemizedlist>
          <listitem>
            <para>AVP Code</para>
          </listitem>
          <listitem>
            <para>AVP Length</para>
          </listitem>
          <listitem>
            <para>AVP Flags</para>
          </listitem>
          <listitem>
            <para>Vendor-ID field (if present)</para>
          </listitem>
          <listitem>
            <para>AVP Data</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Vendor-ID</term>
      <listitem>
        <para>Optional octet identifying AVP in application space. AVP code and AVP Vendor-ID create unique identifier for AVP.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
