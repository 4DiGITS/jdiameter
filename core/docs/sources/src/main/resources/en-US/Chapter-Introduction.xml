<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">%BOOK_ENTITIES;]>

<chapter id="introduction">

	<title>Introduction
		to &THIS.PLATFORM;
	</title>

	<para>Diameter is a computer networking protocol for AAA
		(Authentication, Authorization and Accounting) defined in RFC 3588. It
		is a successor to RADIUS (and its name is a reference to it, a
		diameter is twice the radius). Diameter has been desgined to overcome
		certain RADIUS limitations:</para>
	<itemizedlist>
		<listitem>
			<para>No transport reliability and flexibility (TCP/SCTP instead only
				UDP)</para>
		</listitem>
		<listitem>
			<para>No security within protocol (IPSec or TLS)</para>
		</listitem>
		<listitem>
			<para>Limited address space for AVPs (32 bits instead of 8 bits)
			</para>
		</listitem>
		<listitem>
			<para>Only stateless mode is possible(Diameter supports both)</para>
		</listitem>
		<listitem>
			<para>Static peers ( Diameter offers dynamic discovery, using DNS SRV
				and NAPTR)</para>
		</listitem>
		<listitem>
			<para>No peer alignment capabilities (Diameter introduce capabilities
				negotiation)</para>
		</listitem>
		<listitem>
			<para>No support for transport layer failover (Diameter follows RFC
				3539, which introduces proper procedures)</para>
		</listitem>
		<listitem>
			<para>Limited support for roaming( Diameter introduces new mechanism
				for this)</para>
		</listitem>
		<listitem>
			<para>No extension possible(Diameter allows extension - new commands
				and avps to be defined)</para>
		</listitem>
	</itemizedlist>
	<para>Diameter offers all capabilities of RADIUS protocol. Also as
		logical successor it is comptibile with RADIUS. </para>
	<para>Diameter also allows to define extension. Each extension is
		called &quot;Application&quot;.</para>
	<para>Each application introduces new types of messages, AVP codes, and
		state machines. The Message and AVP codes are assigned by the IANA.
		Furthermore, each application has its own application ID and vendor ID
		that is used to distinguish between applications. In addition,
		application code is used to signal to other peers which operations are
		supported by connecting peer (Capabilities Exchange / Negotiation).
	</para>

	<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
		href="Section-Introduction-Message_Format.xml" encoding="UTF-8" />

	<section id="introduction-contents">
		<title>Contents</title>
		<para>
			<literal>Mobicents Diameter</literal>
			core is build on top of three basic components:
		</para>
		<variablelist>
			<varlistentry>
				<term>stack</term>
				<listitem>
					<para>extensible stack. It provides basic session support along with application specific sessions.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>dictionary</term>
				<listitem>
					<para>message and <acronym>AVP</acronym> dictionary. 
					Provides <acronym>API</acronym> to access information about <acronym>AVP</acronym>:
					 flags, type, assigned values, etc. Dictionary is embeded in <acronym>MUX</acronym>. </para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>MUX</term>
				<listitem>
					<para>stack multiplexer. Allows different listeners to use the same stack instance.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
</chapter>