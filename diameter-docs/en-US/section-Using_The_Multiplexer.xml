<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<section id="utm-Using_The_Multiplexer">
  <title>Using the Multiplexer</title>
  <para>To use the Diameter Multiplexer (MUX), deploy the SAR into the JBoss <filename>/deploy</filename> folder.</para>
  <para>To register an application as a listener, use the  code example described in <xref linkend="example-Base_Listener_Code"/>.</para>
  <example id="example-Base_Listener_Code">
    <title>Base Listener Code</title>
    <programlisting role="JAVA">package org.mobicents.slee.resource.diameter.base;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanServer;
import javax.management.MalformedObjectNameException;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import org.jboss.mx.util.MBeanServerLocator;
import org.jdiameter.api.Answer;
import org.jdiameter.api.ApplicationId;
import org.jdiameter.api.Request;
import org.mobicents.diameter.stack.DiameterListener;
import org.mobicents.diameter.stack.DiameterStackMultiplexerMBean;
public class MyDiameterApplication implements DiameterListener
{
  private DiameterStackMultiplexerMBean diameterMux = null;
  
  private DiameterStackMultiplexerMBean getMux() throws 
   InstanceNotFoundException, MBeanException, ReflectionException, 
   MalformedObjectNameException, NullPointerException

  {
    if(this.diameterMux == null)
    {
      MBeanServer server = MBeanServerLocator.locateJBoss();

      ObjectName diameterMultiplexerObjectName = new 
       ObjectName(&quot;diameter.mobicents:service=DiameterStackMultiplexer&quot;);

      Object[] params = new Object[]{};

      String[] signature = new String[]{};

      String operation = &quot;getMultiplexerMBean&quot;;

      Object object = server.invoke(diameterMultiplexerObjectName, 
       operation, params, signature);

      if(object instanceof DiameterStackMultiplexerMBean)

      {
        this.diameterMux = (DiameterStackMultiplexerMBean) object;
      }
    }

    return this.diameterMux;

  }
  private void registerInMux()

  {

    ApplicationId shAppId = ApplicationId.createByAuthAppId(10415L, 
     16777217L);

    if(this.diameterMux != null)

    {
      this.diameterMux.registerListener(this, new 
       ApplicationId[]{shAppId});
    }

  }

  public Answer processRequest( Request request )

  {
    // Application-specific processing code goes here...

  }
  public void receivedSuccessMessage( Request request, Answer answer )

  {

    // Your processing code goes here...

  }

  public void timeoutExpired( Request request )

  {

    // Your processing code goes here...

  }

}</programlisting>
  </example>
</section>
